# Test sequence for deleting of attributes of storage elements.

# DELETE deletes elements and attributes in the storage.
# The position for deletion  is defined via an XPath.
# XPath uses different notations for elements and attributes.

###
# Storage is not establish 
# Expectations:
# - Status code 404 Resource Not Found
DELETE {{service}}/books/attribute::attrA HTTP/1.0
Storage: {{storage_delete_attribute}}
Content-Type: text/plain

test

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "c5c94cd6cff60f84444c438cba5451cc");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "1913452d06cdd009374767f108cdd58c");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "098f6bcd4621d373cade4e832627b4f6");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "1a3b8937cde8aa40ce5ffe8d389146ec");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "e24e92218b87cffc8c8aa00c5ef5b3e2");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
});
%}

###
# Initial request to establish the storage
# Expectations:
# - Status code 201 Resource Created
# - Storage-Revision: 1/1
# - Storage-Space: 262144/72 bytes
CONNECT {{service}} HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "0fac0bf5eb85f32af856f8d88ce7bf0c");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "0a1295367ea5c4d7744ae57b6de93a2d");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "eece7445b364079bf7390ad5912594ed");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "7552a00a333b92dda9fd1caa3f7118bb");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "90e5f8a2884ecb0f5669c01376905d97");
});
%}

###
# Preparation of the storage for the tests
# Expectations:
# - Status code 204 No Content
# - Storage-Revision: 2/36
# - Storage-Space: 262144/2040 bytes
# - 4 books are overwritten
# - 4 books with chapter are created
# - all new elements have the attributes ___rev and ___uid
PUT {{service}}/books HTTP/1.0
Storage: {{storage_delete_attribute}}
Content-Type: application/xml

<book title="Book-A" a="A" b="A" c="A" d="A">
  <chapter title="Chapter-A-A">
    <text title="Text A1"/>
    <text title="Text A2"/>
    <text title="Text A3"/>
  </chapter>
  <chapter title="Chapter-B">
    <text title="Text A4"/>
    <text title="Text A5"/>
    <text title="Text A6"/>
  </chapter>
</book>
<book title="Book-B" a="B" b="B" c="B" d="B">
  <chapter title="Chapter-B-A">
    <text title="Text B1"/>
    <text title="Text B2"/>
    <text title="Text B3"/>
  </chapter>
  <chapter title="Chapter-B-B">
    <text title="Text B4"/>
    <text title="Text B5"/>
    <text title="Text B6"/>
  </chapter>
</book>
<book title="Book-C" a="C" b="C" c="C" d="C">
  <chapter title="Chapter-C-A">
    <text title="Text C1"/>
    <text title="Text C2"/>
    <text title="Text C3"/>
  </chapter>
  <chapter title="Chapter-C-B">
    <text title="Text C4"/>
    <text title="Text C5"/>
    <text title="Text C6"/>
  </chapter>
</book>
<book title="Book-D" a="D" b="D" c="D" d="D">
  <chapter title="Chapter-D-A">
    <text title="Text D1"/>
    <text title="Text D2"/>
    <text title="Text D3"/>
  </chapter>
  <chapter title="Chapter-D-B">
    <text title="Text D4"/>
    <text title="Text D5"/>
    <text title="Text D6"/>
  </chapter>
</book>

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "4bd05ace5a00af112d25bd18b9b5e0d0");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "59615cb66ffb09730ac2d9b3f7ba2f8c");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "00e2c359698f8dcfcbcc96d374841383");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "64f43500716633427b914befe29c8f49");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "50a27e4f262db0212ea37480ae1abea4");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "b92b44b0e3c1256a8c43a2784fd4152e");
});
%}

###
# Preparation of the storage for the tests
# Expectations:
# - Status code 204 No Content
# - Storage-Revision: 3/1
# - Storage-Space: 262144/2048 bytes
PUT {{service}}/books/@xa HTTP/1.0
Storage: {{storage_delete_attribute}}
Content-Type: text/plain

xa

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "853cfe8a9a796ca2b508495e890c61d3");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "2dfade71ed15949f438a576eff63800f");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "53e59fface936ea788f7cf51e7b25531");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "64f43500716633427b914befe29c8f49");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "21181bd1d0a12aeea2a5509d81be52bd");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "bda51e44d2bdaf1f81cff0efafee2028");
});
%}

###
# Attribute does not exist
# Expectations:
# - Status code 304 Not Modified
# - Storage-Revision: 3/0
# - Storage-Space: 262144/2048 bytes
DELETE {{service}}/books/book%5B1%5D/attribute::not_exists HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "b0c55ca5f38bbe5d1025f8988b883c5d");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "252335a4e294acfa119704fa344ec477");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "c1610b491fd89092dfe0f50eb5a3cf0f");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "bda51e44d2bdaf1f81cff0efafee2028");
});
%}

###
# Attribute does not exist
# Expectations:
# - Status code 304 Not Modified
# - Storage-Revision: 3/0
# - Storage-Space: 262144/2048 bytes
DELETE {{service}}/books/book%5B1%5D/@not_exists HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "f2785e79bfb66c37b11e6686cbcc5758");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "252335a4e294acfa119704fa344ec477");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "c1610b491fd89092dfe0f50eb5a3cf0f");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "bda51e44d2bdaf1f81cff0efafee2028");
});
%}

###
# XPath functions are not supported
# Round brackets in XPath should not be a problem.
# Expectations:
# - Status code 400 Bad Request
# - Message: Invalid XPath (Functions are not supported)
DELETE {{service}}name(.) HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "8f7ec5986132cbed72e494c4a1aa8b7d");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "6196dba52703776af2e6593f772ed7ce");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "b0dc0b357fdc347f6f9e804978870bf6");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "bda51e44d2bdaf1f81cff0efafee2028");
});
%}

###
# Attribute a does exist and can be deleted
# Expectations:
# - Status code 204 No Content
# - Storage-Revision: 4/1
# - Storage-Space: 262144/2042 bytes
# - Storage-Revision: was increased
# - Attribute /books/book[1]/attribute::a was deleted
DELETE {{service}}/books/book%5B1%5D/attribute::a HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "285956362143995110ea467935302650");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "64f43500716633427b914befe29c8f49");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "ac77a3f2dfb950bf2119fd6f27b98ba1");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "e352ff69f31f393851fd214480ffab51");
});
%}

###
# Attribute a no longer exists
# Expectations:
# - Status code 304 Not Modified
# - Storage-Revision: 4/0
# - Storage-Space: 262144/2042 bytes
DELETE {{service}}/books/book%5B1%5D/attribute::a HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "285956362143995110ea467935302650");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "252335a4e294acfa119704fa344ec477");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "2d4af54adf920cd632acaf64a97d591b");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "e352ff69f31f393851fd214480ffab51");
});
%}

###
# Attribute b does exist and can be deleted
# Expectations:
# - Status code 204 No Content
# - Storage-Revision: 5/1
# - Storage-Space: 262144/2036 bytes
# - Storage-Revision: was increased
# - Attribute /books/book[1]/@b was deleted
DELETE {{service}}/books/book%5B1%5D/@b HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "a6b2742da4c8cd1980003a011c92735e");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "64f43500716633427b914befe29c8f49");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "130f37217f4fa94673063c869669e5f8");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "b7fb7bb1657742e0d5cb0933239ffd0f");
});
%}

###
# Attribute b no longer exists
# Expectations:
# - Status code 304 Not Modified
# - Storage-Revision: 5/0
# - Storage-Space: 262144/2036 bytes
DELETE {{service}}/books/book%5B1%5D/@b HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "a6b2742da4c8cd1980003a011c92735e");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "252335a4e294acfa119704fa344ec477");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "28337d8622556f29ecbe7a7fc21612f1");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "b7fb7bb1657742e0d5cb0933239ffd0f");
});
%}

###
# Count of text-attributes in book[1]
# Expectations:
# - Status code 200 Success
# - Content-Length: 1
# - Content-Type: text/plain
# - Storage-Revision: 5/0
# - Storage-Space: 262144/2036 bytes
# - Response-Body: 6
# - URI: count(//book[1]//text[@title])
GET {{service}}636f756e74282f2f626f6f6b5b315d2f2f746578745b407469746c655d29 HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "1259151525ed79b4c2e7cd1653d40303");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "6ea793edc825cd6b0da28cb2d1217a47");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "9ad4159cf4dae60ba98980b6a1fb94c7");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "1679091c5a880faf6fb5e6087eb1b2dc");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "b7fb7bb1657742e0d5cb0933239ffd0f");
});
%}

###
# Attribute does exist
# Round brackets in XPath should not be a problem.
# Expectations:
# - Status code 204 No Content
# - Storage-Revision: 6/0
# - Storage-Space: 262144/1940 bytes
# - All title attributes in  book[1] was deleted
# - URI: (//book[1]//text)/@title
DELETE {{service}}2f2f626f6f6b5b315d2f2f746578742f407469746c65 HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "99d49353bcd276f9b7d3e0bff9261bd0");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "64f43500716633427b914befe29c8f49");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "e89cfcce5d7da2ae8e96b18998c01762");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "5d4e87d2aab2213fa4a9f4ebd09ae398");
});
%}

###
# Count of text-attributes in book[1]
# Expectations:
# - Status code 200 Success
# - Content-Length: 1
# - Content-Type: text/plain
# - Storage-Revision: 6/0
# - Storage-Space: 262144/1940 bytes
# - Response-Body: 0
# - URI: count(//book[1]//text[@title])
GET {{service}}636f756e74282f2f626f6f6b5b315d2f2f746578745b407469746c655d29 HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "1259151525ed79b4c2e7cd1653d40303");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "6ea793edc825cd6b0da28cb2d1217a47");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "439c5c631217fee2e30a30770524bb00");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "cfcd208495d565ef66e7dff9f98764da");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "5d4e87d2aab2213fa4a9f4ebd09ae398");
});
%}

###
# Count of text-attributes in book[1]
# Expectations:
# - Status code 200 Success
# - Content-Length: 1
# - Content-Type: text/plain
# - Storage-Revision: 6/0
# - Storage-Space: 262144/1940 bytes
# - Response-Body: 6
# - URI: count(//book[2]//text[attribute::title])
GET {{service}}636f756e74282f2f626f6f6b5b325d2f2f746578745b6174747269627574653a3a7469746c655d29 HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "07be3ebe842c2ab8ce241dfa5e36cee8");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "6ea793edc825cd6b0da28cb2d1217a47");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "439c5c631217fee2e30a30770524bb00");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "1679091c5a880faf6fb5e6087eb1b2dc");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "5d4e87d2aab2213fa4a9f4ebd09ae398");
});
%}

###
# Attribute does exist
# Round brackets in XPath should not be a problem.
# Expectations:
# - Status code 204 No Content
# - Storage-Revision: 7/6
# - Storage-Space: 262144/1844 bytes
# - Storage-Revision: was increased
# - All title attributes in  book[2] was deleted
# - URI: (//book[2]//text)/attribute::title
DELETE {{service}}282f2f626f6f6b5b325d2f2f74657874292f6174747269627574653a3a7469746c65 HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "6f89169945745654b58f05e3527e3b90");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "64f43500716633427b914befe29c8f49");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "613b2ef28324bfd3198e8917e589cf19");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "59b8bb6b982cccf5c533ee8d2bdf5d27");
});
%}

###
# Count of text-attributes in book[1]
# Expectations:
# - Status code 200 Success
# - Storage-Revision: 7/0
# - Storage-Space: 262144/1844 bytes
# - Content-Length: 1
# - Content-Type: text/plain
# - Response-Body: 0
# - URI: count(//book[2]//text[attribute::title])
GET {{service}}636f756e74282f2f626f6f6b5b325d2f2f746578745b6174747269627574653a3a7469746c655d29 HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "07be3ebe842c2ab8ce241dfa5e36cee8");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "6ea793edc825cd6b0da28cb2d1217a47");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "3a3dc95c201c7274afda071dee4c8c99");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "cfcd208495d565ef66e7dff9f98764da");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "59b8bb6b982cccf5c533ee8d2bdf5d27");
});
%}

###
# Expectations:
# - Status code 304 Not Modified
#   attribute ___rev is ignored, but does not cause errors
# - Storage-Revision: 7/0
# - Storage-Space: 262144/1844 bytes
# - Storage-Revision is not increased
# - Storage-Expiration is extended
DELETE {{service}}/books/@___rev HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "08c5ba0c65aeb29a3d6fa517e645504e");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "252335a4e294acfa119704fa344ec477");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "925c16f122adea471301f98da551e880");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "59b8bb6b982cccf5c533ee8d2bdf5d27");
});
%}

###
# Expectations:
# - Status code 304 Not Modified
#   attribute ___uid is ignored, but does not cause errors
# - Storage-Revision: 7/0
# - Storage-Space: 262144/1844 bytes
# - Storage-Revision is not increased
# - Storage-Expiration is extended
DELETE {{service}}/books/@___uid HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "473000fac467e3b34faeb8a0cb7665d4");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "252335a4e294acfa119704fa344ec477");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "925c16f122adea471301f98da551e880");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "59b8bb6b982cccf5c533ee8d2bdf5d27");
});
%}

###
# DELETE outside the root element, shall be ignored
# but PATCH can only set attributes that exist
# Expectations:
# - Status code 304 Not Modified
# - Storage-Revision: 7/0
# - Storage-Space: 262144/1844 bytes
# - Storage-Revision is not increased
# - URI: /*/../@___xxx
DELETE {{service}}2f2a2f2e2e2f405f5f5f787878 HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "96964ba6815ee0770ecb1c92e6a973e7");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "252335a4e294acfa119704fa344ec477");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "925c16f122adea471301f98da551e880");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "59b8bb6b982cccf5c533ee8d2bdf5d27");
});
%}

###
# DELETE outside the root element, shall be ignored
# but PATCH can only set attributes that exist
# Expectations:
# - Status code 304 Not Modified
# - Storage-Revision: 7/0
# - Storage-Space: 262144/1844 bytes
# - Storage-Revision is not increased
# - URI: //books/../@___xxx
DELETE {{service}}2f2f626f6f6b732f2e2e2f405f5f5f787878 HTTP/1.0
Storage: {{storage_delete_attribute}}

> {%
client.test("unittest", function() {
    client.assert(response.headers.valueOf("Trace-Request-Hash") === "d674f47259470e7148b0ef8e1f74288f");
    client.assert(response.headers.valueOf("Trace-Request-Header-Hash") === "724c9236266485ae5caca7261725d5cf");
    client.assert(response.headers.valueOf("Trace-Request-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Response-Hash") === "252335a4e294acfa119704fa344ec477");
    client.assert(response.headers.valueOf("Trace-Response-Header-Hash") === "925c16f122adea471301f98da551e880");
    client.assert(response.headers.valueOf("Trace-Response-Data-Hash") === "d41d8cd98f00b204e9800998ecf8427e");
    client.assert(response.headers.valueOf("Trace-Storage-Hash") === "59b8bb6b982cccf5c533ee8d2bdf5d27");
});
%}
